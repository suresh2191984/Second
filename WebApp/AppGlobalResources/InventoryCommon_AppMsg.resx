<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="InventoryCommon_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="InventoryCommon_Controls_INVAttributes_ascx_01" xml:space="preserve">
    <value>Enter the Values</value>
  </data>
  <data name="InventoryCommon_Controls_INVAttributes_ascx_02" xml:space="preserve">
    <value>You Exceed The Product Quantity</value>
  </data>
  <data name="InventoryCommon_Controls_INVAttributes_ascx_03" xml:space="preserve">
    <value>Please Enter The Detail For Whole Quantity</value>
  </data>
  <data name="InventoryCommon_Controls_INVAttributes_ascx_04" xml:space="preserve">
    <value>Cannot be added multiple times</value>
  </data>
  <data name="InventoryCommon_Controls_INVAttributeUsage_ascx_01" xml:space="preserve">
    <value>Product Quantity Has Been Exceeded</value>
  </data>
  <data name="InventoryCommon_Controls_INVAttributeUsage_ascx_02" xml:space="preserve">
    <value>Cannot be added multiple times</value>
  </data>
  <data name="InventoryCommon_Controls_INVAttributeUsage_ascx_03" xml:space="preserve">
    <value>Product Detail Does not Exist</value>
  </data>
  <data name="InventoryCommon_Controls_INVAttributeUsage_ascx_04" xml:space="preserve">
    <value>Enter the Values</value>
  </data>
  <data name="InventoryCommon_Controls_INVAttributeUsage_ascx_05" xml:space="preserve">
    <value>Do You Want Continue With Partial Updating</value>
  </data>
  <data name="InventoryCommon_Controls_InventorySearch_ascx_01" xml:space="preserve">
    <value>Please Select The Search Type</value>
  </data>
  <data name="InventoryCommon_Controls_InventorySearch_ascx_02" xml:space="preserve">
    <value>Please Select an Order</value>
  </data>
  <data name="InventoryCommon_Error" xml:space="preserve">
    <value>Alert</value>
  </data>
  <data name="InventoryCommon_Information" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="InventoryCommon_OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="InventoryCommon_Controls_InventorySearch_ascx_03" xml:space="preserve">
    <value>This Order Already In Status</value>
  </data>
  <data name="InventoryCommon_Controls_InventorySearch_ascx_04" xml:space="preserve">
    <value>No Matching Records Found!</value>
  </data>
  <data name="InventoryCommon_Controls_INVStockUsage_ascx_01" xml:space="preserve">
    <value>Product Quantity Has Been Exceeded</value>
  </data>
  <data name="InventoryCommon_Controls_INVStockUsage_ascx_02" xml:space="preserve">
    <value>Cannot be added multiple times</value>
  </data>
  <data name="InventoryCommon_Controls_INVStockUsage_ascx_03" xml:space="preserve">
    <value>Product Detail Does not Exist</value>
  </data>
  <data name="InventoryCommon_Controls_INVStockUsage_ascx_04" xml:space="preserve">
    <value>Please Enter The Batch No</value>
  </data>
  <data name="InventoryCommon_Controls_INVStockUsage_ascx_05" xml:space="preserve">
    <value>Please Enter Issue Quantity</value>
  </data>
  <data name="InventoryCommon_Controls_INVStockUsage_ascx_06" xml:space="preserve">
    <value>Please Check Items Added/Quantity Entered Properly</value>
  </data>
  <data name="InventoryCommon_Controls_INVStockUsage_ascx_07" xml:space="preserve">
    <value>Please Check Items Added/Quantity Entered Properly</value>
  </data>
  <data name="InventoryCommon_Controls_INVStockUsage_ascx_08" xml:space="preserve">
    <value>Product Name and Batch Number Is Already Exists</value>
  </data>
  <data name="InventoryCommon_Controls_INVStockUsage_ascx_09" xml:space="preserve">
    <value>Attribute Detail Missing For Some Products</value>
  </data>
  <data name="InventoryCommon_Controls_INVStockUsage_ascx_10" xml:space="preserve">
    <value>Please Enter The Product Name</value>
  </data>
  <data name="InventoryCommon_Controls_INVStockUsage_ascx_11" xml:space="preserve">
    <value>Enter the Values</value>
  </data>
  <data name="InventoryCommon_Controls_INVStockUsage_ascx_12" xml:space="preserve">
    <value>Entered Product Doesn't Exist</value>
  </data>
  <data name="InventoryCommon_Controls_ProductSearch_ascx_01" xml:space="preserve">
    <value>The Given Product Is Not Available</value>
  </data>
  <data name="InventoryCommon_Scripts_CompoundDrugs_js_01" xml:space="preserve">
    <value>Select The Product</value>
  </data>
  <data name="InventoryCommon_Scripts_CompoundDrugs_js_02" xml:space="preserve">
    <value>Provide The Drug Name</value>
  </data>
  <data name="InventoryCommon_Scripts_CompoundDrugs_js_03" xml:space="preserve">
    <value>provide the frequency</value>
  </data>
  <data name="InventoryCommon_Scripts_CompoundDrugs_js_04" xml:space="preserve">
    <value>Provide The Dose</value>
  </data>
  <data name="InventoryCommon_Scripts_CompoundDrugs_js_05" xml:space="preserve">
    <value>Provide The Duration</value>
  </data>
  <data name="InventoryCommon_Scripts_CompoundDrugs_js_06" xml:space="preserve">
    <value>provide the Instruction</value>
  </data>
  <data name="InventoryCommon_Scripts_CompoundDrugs_js_07" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="InventoryCommon_Scripts_CompoundDrugs_js_08" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="InventoryCommon_Scripts_InvStockUsage_js_20" xml:space="preserve">
    <value>This Product Have Return Sub Store Stock</value>
  </data>
  <data name="InventoryCommon_Scripts_InvStockUsage_js_21" xml:space="preserve">
    <value>You Can Use Remaining Stock</value>
  </data>
  <data name="InventoryCommon_Scripts_InvAutoCompBacthNo_js_01" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="InventoryCommon_Scripts_InvAutoCompBacthNo_js_02" xml:space="preserve">
    <value>Batch No</value>
  </data>
  <data name="InventoryCommon_Scripts_InvAutoCompBacthNo_js_03" xml:space="preserve">
    <value>Expiry Date</value>
  </data>
  <data name="InventoryCommon_Scripts_InvAutoCompBacthNo_js_04" xml:space="preserve">
    <value>Selling Price</value>
  </data>
  <data name="InventoryCommon_Scripts_InvAutoCompBacthNo_js_05" xml:space="preserve">
    <value>Cost Price</value>
  </data>
  <data name="InventoryCommon_Scripts_InvAutoCompBacthNo_js_06" xml:space="preserve">
    <value>Available Quantity</value>
  </data>
  <data name="InventoryCommon_Scripts_InvStockUsage_js_03" xml:space="preserve">
    <value>Product product name and batch number combination already exist</value>
  </data>
  <data name="InventoryCommon_Controls_InventorySearch_ascx_06" xml:space="preserve">
    <value>Please generate barcode for </value>
  </data>
</root>