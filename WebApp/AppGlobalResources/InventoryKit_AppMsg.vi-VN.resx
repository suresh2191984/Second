<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="InventoryKit_Cancel" xml:space="preserve">
    <value>Hủy bỏ</value>
  </data>
  <data name="InventoryKit_Error" xml:space="preserve">
    <value>Cảnh báo</value>
  </data>
  <data name="InventoryKit_Information" xml:space="preserve">
    <value>Thông tin</value>
  </data>
  <data name="InventoryKit_INVKitMaster_aspx_EnterManufacturer" xml:space="preserve">
    <value>Nhập tên nhà sản xuất</value>
  </data>
  <data name="InventoryKit_INVKitMaster_aspx_KitNameExists" xml:space="preserve">
    <value>Tên Kit đã tồn tại</value>
  </data>
  <data name="InventoryKit_INVKitMaster_aspx_KitSave" xml:space="preserve">
    <value>Đã lưu thành công bộ định nghĩa kit</value>
  </data>
  <data name="InventoryKit_INVKitMaster_aspx_ProductCombination" xml:space="preserve">
    <value>Kết hợp sản phẩm đã tồn tại</value>
  </data>
  <data name="InventoryKit_INVKitMaster_aspx_ProvideKitName" xml:space="preserve">
    <value>Cung cấp Tên Kit bất kỳ</value>
  </data>
  <data name="InventoryKit_INVKitMaster_aspx_ProvideKitValidation" xml:space="preserve">
    <value>Cung cấp Tên Kit</value>
  </data>
  <data name="InventoryKit_INVKitMaster_aspx_ProvideProductName" xml:space="preserve">
    <value>Cung cấp tên sản phẩm</value>
  </data>
  <data name="InventoryKit_INVKitMaster_aspx_ProvideProductNameQty" xml:space="preserve">
    <value>Cung cấp tên và số lượng sản phẩm</value>
  </data>
  <data name="InventoryKit_INVKitMaster_aspx_ProvideQuantity" xml:space="preserve">
    <value>Cung cấp số lượng lớn hơn Zero</value>
  </data>
  <data name="InventoryKit_INVKitMaster_aspx_SelectProduct" xml:space="preserve">
    <value>Chọn danh mục sản phẩm</value>
  </data>
  <data name="InventoryKit_INVKitMaster_aspx_SelectProductType" xml:space="preserve">
    <value>Chọn loại sản phẩm</value>
  </data>
  <data name="InventoryKit_OK" xml:space="preserve">
    <value>được</value>
  </data>
  <data name="InventoryKit_KitCreation_aspx_KitBatch" xml:space="preserve">
    <value>Kit Batch đã được tạo thành công</value>
  </data>
  <data name="InventoryKit_KitCreation_aspx_KitInactive" xml:space="preserve">
    <value>Bộ này hiện đang ở trạng thái không hoạt động, liên hệ với quản trị viên</value>
  </data>
  <data name="InventoryKit_InvKitCancel_aspx_01" xml:space="preserve">
    <value>Bạn có chắc chắn muốn hủy Bộ công cụ này không?</value>
  </data>
  <data name="InventoryKit_KitProductPrintSearch.aspx_aspx_01" xml:space="preserve">
    <value>Chọn một sản phẩm KitBatch</value>
  </data>
</root>